1. intro
    1) Spring Framework은 2000년대 초 EJB (Enterprise Java Beans) 대안으로 출현
    2) 자바 EE 8은 오라클이 개발 중단
        - 커뮤니티 주도로 자카르타 EE(Jakarta EE) 이름으로 유지 관리
    
    3) defacto standard
        - 웹 백엔드 프레임워크의 사실상 표준

2. 스프링 프레임워크
    1) 자바 생태계 일부인 애플리케이션 프레임워크임
        - application framework
            - 애플리케이션을 개발하는 기본 구조를 제공하는 공통 소프트웨어 기능의 집합
    2) 애플리케이션을 구축하는 기능의 집합
        - ex) 이케아 (ikea)
            - DIY 상점에서 옷장 구입하는 경우
            - 옷장은 조립된 옷장이 아님
            - 필요한 부품과 조립 방법으로 조립
        - 로깅 오류 메시지는 모든 앱에서 발생함
        - 트랜잭션
        - 보안
    3) 


              비지니스 로직 코드
            -----------------------------------------
              트랜잭션, 보안, 로깅, 데이터 전송, 캐싱..

3. 스프링 생태계
    1) 스프링 코어(Spring Core)
        - 스프링 컨텍스트
        - 스프링 애스펙트 (aspects)
        - Spring Expression Language (SpEL)
            - 스프링 표현 언어
    2) Spring Web MVC
        - 스프링 모델-뷰-컨트롤러
        - HTTP 요청을 처리하는 웹 애플리케이션 개발할 수 있게 하는 SF 일부분임
    3) Spring Data Access
        - SQL 데이터베이스에 연결하여 애플리케이션 persistence 계층을 구현하는데 사용할 수 있는 기본 도구 제공함
    4) Spring Testing
        - 테스트 작성하는 데 필요한 도구를 담고 있음

4. 스프링 코어 (스프링 기초)
    1) 제어 역전 (Inversion of Control, IoC) 원칙 기반으로 작동함
        - 앱이 실행을 제어하는 대신 다른 소프트웨어, 스프링 프레임워크에 제어 권한을 넘김
        - Configuration(구성 정보)을 이용하여 앱 비즈니스 로직을 정의하도록 작성된 코드 관리 방법을 프레임워크에 지시함
        - 제어 역전에서 역전을 앱이 자체 코드로 실행을 제어하거나 의존성을 사용하지 못하는 대신 프레임워크가 앱과 앱의 코드를 제어함

    2) IoC
        - 사용하지 않을때
                    의존성          의존성          의존성
                     /|\             /|\            /|\
             (제어)   |               |              |
                      |               |              |
                  애플리케이션     
        - 사용할때
                                 애플리케이션 
                                    /|\
                                     |  (제어)
                                     |
                                 프레임워크(의존성)

        - 제어 역전은 앱 실행은 의존성으로 제어됨
          스프링 프레임워크가 실행 중에 앱을 제어함

    3) 스프링 관점 지향 프로그래밍 (Aspect-Oriented Programming)